< Servlet 단점 > 
 
(1) web.xml 맵핑 
(2) 매번 컴파일 
(3) scope 핸들링 복잡 
    application, session, request, page
(4) 중복 (계속 반복해서 써야하는 코드)
    package aa.bb;
    import javax.servlet.http.*;
    import javax.servlet.*;
    public void service(){
    }
    res.setContentType("text/html;charset=utf-8");
    PrintWriter pw = res.getWriter();
    pw.println("");
(5) 논리경로 ( WEB-INF/classes ) 
(6) 분업 ( 디자이너 + 프로그래머 ) 
    - Servlet: html -> java
    - JSP: html <- java 
(7) Bean 사용 코드 
    soo.db.ConnectionPoolBean(); 자동 객체 생성

cf) JSP 서비스 메커니즘 
    JSP(.jsp) -> Servlet(.java) -> .class

서블릿은 웹서비스에서 정말 많이 쓰이는 객체이다. 
따라서 웹서비스에서 이러한 작업들을 간편하고 빠르게 할 필요가 있다.
서블릿(순수 자바언어로 작업)은 위와같은 단점이 있다.
이러한 단점을 극복하고, 웹서비스 작업을 간편하게 할 수 있도록 도와주는 파워풀한 도구, 라이브러리, 프레임워크 가 바로 JSP이다.
따라서 JSP를 공부할 때, 위의 단점들을 어떻게 처리하였는지를 중심으로 JSP를 파악해보자.


