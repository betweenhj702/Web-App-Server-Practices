/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.40
 * Generated at: 2021-01-05 02:36:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.sm;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import mvc.domain.Board;
import sm.mvc.vo.ListResult;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("sm.mvc.vo.ListResult");
    _jspx_imports_classes.add("mvc.domain.Board");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset='utf-8'>\r\n");
      out.write("<title>Simple Board with jsp and dbcp in MVC</title>\r\n");
      out.write("<style>table,th,td{border:1px solid black;border-collapse:collapse}th,td{padding:5px}a{text-decoration:none}</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<center>\r\n");
      out.write("<hr width='600' size='2' noshade>\r\n");
      out.write("<h2>Simple Board with JSP and dbcp in MVC</h2>\r\n");
      out.write("&nbsp;&nbsp;&nbsp;\r\n");
      out.write("<a href='sm.do?m=write'>글쓰기</a>\r\n");
      out.write("&nbsp;&nbsp;&nbsp;\r\n");
      out.write("<a href='../'>인덱스</a>\r\n");
      out.write("\r\n");
      out.write("<hr width='600' size='2' noshade>\r\n");
      out.write("<table border='1' width='600' align='center' cellpadding='2'>\r\n");
      out.write("<tr>\r\n");
      out.write("<th align='center' width='10%'>글번호</th>\r\n");
      out.write("<th align='center' width='15%'>작성자</th>\r\n");
      out.write("<th align='center' width='30%'>이메일</th>\r\n");
      out.write("<th align='center' width='30%'>글제목</th>\r\n");
      out.write("<th align='center' width='15%'>날짜</th>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");

	ListResult listResult = (ListResult) request.getAttribute("listResult");
	List<Board> list = listResult.getList();
	if( (list.size() != 0) ){
		for(Board dto: list){

      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t<td align='center'>");
      out.print(dto.getSeq());
      out.write("</td>\r\n");
      out.write("\t\t\t<td align='center'>");
      out.print(dto.getWriter());
      out.write("</td>\r\n");
      out.write("\t\t\t<td align='center'>");
      out.print(dto.getEmail());
      out.write("</td>\r\n");
      out.write("\t\t\t<td align='center'>\r\n");
      out.write("\t\t\t<a href='sm.do?m=selectCon&seq=");
      out.print(dto.getSeq());
      out.write('\'');
      out.write('>');
      out.print(dto.getSubject());
      out.write("</a>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t\t<td align='center'>");
      out.print(dto.getRdate());
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\r\n");

			}

      out.write("\r\n");
      out.write("\t\t</table>\r\n");
			
	}else{		

      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td align='center' colspan='5'>데이터 없음</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("<hr width='600' size='2' color='gray' noshade>\r\n");

	}
	
	long totalP = listResult.getTotalPageCount();

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<font color='gray' size='3' face='휴먼편지체'>\r\n");
      out.write("    (총페이지수 : ");
      out.print(totalP);
      out.write(")\r\n");
      out.write("    &nbsp;&nbsp;&nbsp;\r\n");
      out.write("    \r\n");

	//int cp = listResult.getCurrentPage();
	int cp = (int) session.getAttribute("cp");
	for(int i=1;i<=totalP;i++){
		if(i == cp){

      out.write("\r\n");
      out.write("\t\t\t<a href=\"sm.do?cp=");
      out.print(i);
      out.write("\">\r\n");
      out.write("\t\t\t\t<strong>");
      out.print(i);
      out.write("</strong>\r\n");
      out.write("\t\t\t</a>&nbsp;\r\n");

		}else{

      out.write("\r\n");
      out.write("\t\t\t<a href=\"sm.do?cp=");
      out.print(i);
      out.write("\">\r\n");
      out.write("\t\t\t\t");
      out.print(i);
      out.write("\r\n");
      out.write("\t\t\t</a>&nbsp;\r\n");

		}
	}
	//int pageS = listResult.getPageSize();
	int pageS = (int) session.getAttribute("ps");

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    ( TOTAL : ");
      out.print(listResult.getTotalCount());
      out.write(" )\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("     페이지 싸이즈 : \r\n");
      out.write("    <select id=\"psId\" name=\"ps\" onchange=\"f(this)\">\r\n");
      out.write("    \t\t\r\n");
      out.write("   \t\t   <option value=\"3\"");
      out.print(3==(pageS)?"selected":"");
      out.write(">3</option>\r\n");
      out.write("\t       <option value=\"5\"");
      out.print(5==(pageS)?"selected":"");
      out.write(">5</option>\r\n");
      out.write("\t       <option value=\"10\"");
      out.print(10==(pageS)?"selected":"");
      out.write(">10</option>\r\n");
      out.write("    </select>\r\n");
      out.write("    \r\n");
      out.write("    <script language=\"javascript\">\r\n");
      out.write("       function f(select){\r\n");
      out.write("           //var el = document.getElementById(\"psId\");\r\n");
      out.write("           var ps = select.value;\r\n");
      out.write("           //alert(\"ps : \" + ps);\r\n");
      out.write("           location.href=\"sm.do?ps=\"+ps;\r\n");
      out.write("       }\r\n");
      out.write("    </script>\r\n");
      out.write("</font>\r\n");
      out.write("<hr width='600' size='2' color='gray' noshade>\r\n");
      out.write("</center>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
