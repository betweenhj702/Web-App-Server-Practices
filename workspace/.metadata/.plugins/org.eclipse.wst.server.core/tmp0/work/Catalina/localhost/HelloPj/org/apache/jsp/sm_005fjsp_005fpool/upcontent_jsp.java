/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.40
 * Generated at: 2020-12-29 04:09:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.sm_005fjsp_005fpool;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class upcontent_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      soo.db.ConnectionPoolBean pool = null;
      synchronized (application) {
        pool = (soo.db.ConnectionPoolBean) _jspx_page_context.getAttribute("pool", javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        if (pool == null){
          pool = new soo.db.ConnectionPoolBean();
          _jspx_page_context.setAttribute("pool", pool, javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        }
      }
      out.write("\r\n");
      out.write("\r\n");

		int seq = -1;
		String seqStr = request.getParameter("seq");
        if(seqStr != null){
			seqStr = seqStr.trim();
			if(seqStr.length() != 0){
				try{
					seq = Integer.parseInt(seqStr);
				}catch(NumberFormatException ne){
					response.sendRedirect("list.jsp");
				}
			}else{
				response.sendRedirect("list.jsp");
			}
		}else{
			response.sendRedirect("list.jsp");
		}
		Connection con=null;
		PreparedStatement pstmt1=null;
		ResultSet rs = null;
		String sql1 = "select * from BOARD where SEQ = ?";
		try{
			con = pool.getConnection();
			pstmt1 = con.prepareStatement(sql1);
			pstmt1.setInt(1, seq);
			rs = pstmt1.executeQuery();
			rs.next();
			String writer = rs.getString(2);
			String email = rs.getString(3);
			String subject = rs.getString(4);
			String content = rs.getString(5);

      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=utf-8>\r\n");
      out.write("<title>Simple Board with jsp and pool</title>\r\n");
      out.write("<style>table,th,td{border:1px solid black;border-collapse:collapse}th,td{padding:5px}a{text-decoration:none}</style>\r\n");
      out.write("<script src=\"../js/check.js\"></script>\r\n");
      out.write("<script language=javascript>function check(){for(var c=0;c<document.input.elements.length;c++){var e=document.input.elements[c];if(e.value==\"\"){alert(\"모든 값을 입력 하셔야 합니다. \");return false}}var a=input.writer.value;a=trim(a);pass=checkByteLen(a,15);if(!pass){alert(\"이름 15바이트이하\");input.writer.focus();return false}var d=input.email.value;d=trim(d);pass=checkByteLen(d,20);if(!pass){alert(\"이메일 20바이트이하\");input.email.focus();return false}var b=input.subject.value;b=trim(b);pass=checkByteLen(b,20);if(!pass){alert(\"제목 20바이트이하\");input.subject.focus();return false}var f=input.content.value;f=trim(f);pass=checkByteLen(f,400);if(!pass){alert(\"글 400바이트이하\");input.writer.focus();return false}document.input.submit()};</script>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("function f(){\r\n");
      out.write("input.email.value = \"\";\r\n");
      out.write("input.subject.value = \"\";\r\n");
      out.write("$(\"#ta\").text(\"\");\r\n");
      out.write("input.email.focus();\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body onload=input.writer.focus()>\r\n");
      out.write("<font color=gray size=4 face=휴먼편지체>\r\n");
      out.write("<center>\r\n");
      out.write("<hr width=600 size=2 color=gray noshade>\r\n");
      out.write("<h3> Simple Board with jsp and pool </h3>\r\n");
      out.write("<font color=gray size=3 face=휴먼편지체>\r\n");
      out.write("<a href=list.do>리스트</a>\r\n");
      out.write("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("<a href=../>인덱스</a>\r\n");
      out.write("</font>\r\n");
      out.write("<hr width=600 size=2 color=gray noshade>\r\n");
      out.write("</center>\r\n");
      out.write("<form name=input method=post action= update.jsp>\r\n");
      out.write("<input type=\"hidden\" name=\"seq\" value=\"");
      out.print(seq);
      out.write("\">\r\n");
      out.write("<table border=0 width=600 align=center cellpadding=3 cellspacing=1 bordercolor=gray>\r\n");
      out.write("<tr>\r\n");
      out.write("<td width=30% align=center>WRITER</td>\r\n");
      out.write("<td><input type=text name=writer value=\"");
      out.print(writer);
      out.write("\" size=60></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td align=center>EMAIL</td>\r\n");
      out.write("<td><input type=text name=email value=\"");
      out.print(email);
      out.write("\" size=60></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td align=center>SUBJECT</td>\r\n");
      out.write("<td><input type=text name=subject value=\"");
      out.print(subject);
      out.write("\" size=60></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td align=center>CONTENT</td>\r\n");
      out.write("<td><textarea id=ta name=content style=width:98% rows=8 cols=60>");
      out.print(content);
      out.write("</textarea></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td colspan=2 align=center>\r\n");
      out.write("<input type=button value=수정 onclick=check()>\r\n");
      out.write("<input type=button value=\"다시입력\" onclick=f()>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("<hr width=600 size=2 color=gray noshade>\r\n");
      out.write("</form>\r\n");
      out.write("</font>\r\n");
      out.write("</body>\r\n");

	}catch(SQLException se){
	}finally{
		try{
			if(rs != null) rs.close();
			if(pstmt1 != null) pstmt1.close();
			if(con != null) pool.returnConnection(con);
		}catch(SQLException se){
		}
	}

      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
